{
  "name": "grunt-cache-bust",
  "description": "Bust static assets from the cache using content hashing",
  "version": "0.4.4",
  "author": {
    "name": "Ben Holland",
    "email": "hi@benholland.me"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hollandben/grunt-cache-bust.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/hollandben/grunt-cache-bust/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-copy": "~0.5.0",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-nodeunit": "~0.3.3",
    "grunt-contrib-watch": "~0.6.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "dependencies": {
    "cheerio": "~0.14.0",
    "css": "^1.6.0"
  },
  "keywords": [
    "grunt",
    "grunt plugin",
    "cache",
    "bust",
    "bust assets"
  ],
  "readme": "# grunt-cache-bust\n\n[![Build Status](https://travis-ci.org/hollandben/grunt-cache-bust.png?branch=master)](https://travis-ci.org/hollandben/grunt-cache-bust)\n\n> Bust static assets from the cache using content hashing\n\n* [Getting Started](#getting-started)\n* [Introduction](#the-cachebust-task)\n* [Overview](#overview)\n* [Options](#options)\n* [Usage Examples](#usage-examples)\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-cache-bust --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-cache-bust');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"cacheBust\" task\n\nUse the **cacheBust** task for cache busting static files in your application. This allows them to be cached forever by the browser, just point the task towards any file that contains references to static assets.\n\n_Currently supported static assets: **CSS**, **JavaScript**, **images** and **favicons**_\n\n_Note:_ Remote URLs for CSS, JavaScript, and images are ignored by cacheBust.  This assumes that remote URLs for these assets will\nbe CDN hosted content, typically for well known libraries like jQuery or Bootstrap. For example, all of below URLs will be ignored:\n\n```html\n<link href=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css\" rel=\"stylesheet\">\n<link href=\"http://twitter.github.com/bootstrap/assets/css/bootstrap.css\" rel=\"stylesheet\">\n<script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.0.6/angular.min.js\"></script>\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\n<script type=\"text/javascript\" src=\"http://code.jquery.com/qunit/qunit-1.12.0.js\"></script>\n<img src=\"https://secure.gravatar.com/avatar/d3b2094f1b3386e660bb737e797f5dcc?s=420\" alt=\"test\" />\n```\n\n### Overview\nIn your project's Gruntfile, add a section named `cacheBust` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  cacheBust: {\n    options: {\n      encoding: 'utf8',\n      algorithm: 'md5',\n      length: 16\n    },\n    assets: {\n        files: [{\n            src: ['index.html']\n        }]\n    }\n  },\n})\n```\n\n```html\n<!doctype html>\n<html>\n<head>\n    <title>This is a test page</title>\n    <link rel=\"stylesheet\" href=\"assets/standard.css\" />\n</head>\n<body>\n    <img src=\"assets/standard.jpg\" alt=\"bird\">\n    <script defer src=\"assets/standard.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n```\n\nAll single and double-quoted strings in the target files with \"#grunt-cache-bust\" appended to the URL will be cache busted.\n\n### Options\n\n#### options.algorithm\nType: `String`\nDefault value: `'md5'`\n\n`algorithm` is dependent on the available algorithms supported by the version of OpenSSL on the platform. Examples are `'sha1'`, `'md5'`, `'sha256'`, `'sha512'`\n\n#### options.baseDir\nType: `String`\nDefault value: `false`\n\nWhen set, `cachebust` will try to find the asset files using the baseDir as base path.\n\n#### options.enableUrlFragmentHint\n\nType: `Boolean`\nDefault value: `false`\n\nWhen true, cachebust will search single and double-quoted strings in scripting languages such as PHP for asset paths. Asset paths must have the `#grunt-cache-bust` URL fragment appended. See [an example](https://github.com/hollandben/grunt-cache-bust/blob/master/test/fixtures/enableUrlFragmentHint.php) for more details.\n\n#### options.encoding\nType: `String`\nDefault value: `'utf8'`\n\n#### options.filters\nType : `Object`\nDefault value:\n```js\n{\n    'SELECTOR' : function() { return this.attribs['ATTR']; }\n}\n```\n\nThe key in the object is the `selector`, and the value provided is the filter. Filters will be merged with the defaults above. See [an example](https://github.com/hollandben/grunt-cache-bust/blob/master/tasks/cachebust.js#L39) for more details.\n\nThe encoding of the file contents.\n\n#### options.ignorePatterns\nType: `Array`\nDefault value: `[]`\n\nThis is a regex test against a file reference. If returned true for patterns in the array, then that file will be ignored.\n\n```js\nignorePatterns: ['test', 'requirejs']\n```\n\n#### options.jsonOutput\nType: `Boolean|String`\nDefault value: `false`\n\nWhen set as `true`, `cachbust` will create a json file with an object inside that contains key value pairs of the original file name, and the renamed md5 hash name for each file.\n\nThe default output file will be named `cachebuster.json` and is relative to the root of the project, or the `baseDir` option if set.\n\nAlternatively, you can set this option as a string i.e. `example-file-name.json`, and this will be used.\n\nOutput format looks like this:\n```\n{\n  'app.js' : 'app_23E6F7AC5623E96F7AC56293E6F7AC56.js',\n  'vendor.js': 'vendor_KJJKNB1FHjh421fwaj124bfaf52jwWAA.js'\n}\n```\n\n#### options.length\nType: `Number`\nDefault value: `16`\n\nThe number of characters of the file content hash to prefix the file name with.\n\n#### options.rename\nType: `Boolean`\nDefault value: `false`\n\nWhen true, `cachebust` will rename the reference to the file and the file itself with the generated hash. When set to false, then a query string parameter is added to the end of the file reference.\n\n### Usage Examples\n\n#### Basic Asset Cache Busting\n\n```js\ngrunt.initConfig({\n  cacheBust: {\n    files: {\n      src: ['index.html', 'contact.html']\n    }\n  }\n});\n```\n\n#### Custom Options\n\n```js\ngrunt.initConfig({\n  cacheBust: {\n    options: {\n      algorithm: 'sha1',\n      length: 32,\n      baseDir: '.tmp/public/',\n      filters: {\n        'script' : [\n            function() { return this.attribs['data-main']; }, // for requirejs mains.js\n            function() { return this.attribs['src']; } // keep default 'src' mapper\n        ]\n      }\n    },\n    files: [{\n      expand: true,\n      cwd: 'src',\n      src: ['*.html'],\n      dest: 'dest/'\n    }]\n  }\n});\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hollandben/grunt-cache-bust/issues"
  },
  "homepage": "https://github.com/hollandben/grunt-cache-bust",
  "_id": "grunt-cache-bust@0.4.4",
  "dist": {
    "shasum": "2ea56f2f1d1b32948924cfec6fe9cb27a94bc634"
  },
  "_from": "grunt-cache-bust@^0.4.4",
  "_resolved": "https://registry.npmjs.org/grunt-cache-bust/-/grunt-cache-bust-0.4.4.tgz"
}
